<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.springmvc.dao.TestResultDetailMapper">
  <resultMap id="BaseResultMap" type="cn.springmvc.model.TestResultDetail">
    <id column="runtime" jdbcType="TIMESTAMP" property="runtime" />
    <id column="caseId" jdbcType="VARCHAR" property="caseid" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="taketime" jdbcType="BIGINT" property="taketime" />
    <result column="system" jdbcType="VARCHAR" property="system" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.springmvc.model.TestResultDetail">
    <result column="detailmsg" jdbcType="LONGVARCHAR" property="detailmsg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    runtime, caseId, result, taketime, system
  </sql>
  <sql id="Blob_Column_List">
    detailmsg
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.springmvc.model.TestResultDetailCriteria" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_result_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.springmvc.model.TestResultDetailCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_result_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="cn.springmvc.model.TestResultDetailKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_result_detail
    where runtime = #{runtime,jdbcType=TIMESTAMP}
      and caseId = #{caseid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.springmvc.model.TestResultDetailKey">
    delete from t_result_detail
    where runtime = #{runtime,jdbcType=TIMESTAMP}
      and caseId = #{caseid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.springmvc.model.TestResultDetailCriteria">
    delete from t_result_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.springmvc.model.TestResultDetail">
    insert into t_result_detail (runtime, caseId, result, 
      taketime, system, detailmsg
      )
    values (#{runtime,jdbcType=TIMESTAMP}, #{caseid,jdbcType=VARCHAR}, #{result,jdbcType=VARCHAR}, 
      #{taketime,jdbcType=BIGINT}, #{system,jdbcType=VARCHAR}, #{detailmsg,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.springmvc.model.TestResultDetail">
    insert into t_result_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="runtime != null">
        runtime,
      </if>
      <if test="caseid != null">
        caseId,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="taketime != null">
        taketime,
      </if>
      <if test="system != null">
        system,
      </if>
      <if test="detailmsg != null">
        detailmsg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="runtime != null">
        #{runtime,jdbcType=TIMESTAMP},
      </if>
      <if test="caseid != null">
        #{caseid,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="taketime != null">
        #{taketime,jdbcType=BIGINT},
      </if>
      <if test="system != null">
        #{system,jdbcType=VARCHAR},
      </if>
      <if test="detailmsg != null">
        #{detailmsg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.springmvc.model.TestResultDetailCriteria" resultType="java.lang.Long">
    select count(*) from t_result_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_result_detail
    <set>
      <if test="record.runtime != null">
        runtime = #{record.runtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.caseid != null">
        caseId = #{record.caseid,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=VARCHAR},
      </if>
      <if test="record.taketime != null">
        taketime = #{record.taketime,jdbcType=BIGINT},
      </if>
      <if test="record.system != null">
        system = #{record.system,jdbcType=VARCHAR},
      </if>
      <if test="record.detailmsg != null">
        detailmsg = #{record.detailmsg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_result_detail
    set runtime = #{record.runtime,jdbcType=TIMESTAMP},
      caseId = #{record.caseid,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=VARCHAR},
      taketime = #{record.taketime,jdbcType=BIGINT},
      system = #{record.system,jdbcType=VARCHAR},
      detailmsg = #{record.detailmsg,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_result_detail
    set runtime = #{record.runtime,jdbcType=TIMESTAMP},
      caseId = #{record.caseid,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=VARCHAR},
      taketime = #{record.taketime,jdbcType=BIGINT},
      system = #{record.system,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.springmvc.model.TestResultDetail">
    update t_result_detail
    <set>
      <if test="result != null">
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="taketime != null">
        taketime = #{taketime,jdbcType=BIGINT},
      </if>
      <if test="system != null">
        system = #{system,jdbcType=VARCHAR},
      </if>
      <if test="detailmsg != null">
        detailmsg = #{detailmsg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where runtime = #{runtime,jdbcType=TIMESTAMP}
      and caseId = #{caseid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.springmvc.model.TestResultDetail">
    update t_result_detail
    set result = #{result,jdbcType=VARCHAR},
      taketime = #{taketime,jdbcType=BIGINT},
      system = #{system,jdbcType=VARCHAR},
      detailmsg = #{detailmsg,jdbcType=LONGVARCHAR}
    where runtime = #{runtime,jdbcType=TIMESTAMP}
      and caseId = #{caseid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.springmvc.model.TestResultDetail">
    update t_result_detail
    set result = #{result,jdbcType=VARCHAR},
      taketime = #{taketime,jdbcType=BIGINT},
      system = #{system,jdbcType=VARCHAR}
    where runtime = #{runtime,jdbcType=TIMESTAMP}
      and caseId = #{caseid,jdbcType=VARCHAR}
  </update>
</mapper>