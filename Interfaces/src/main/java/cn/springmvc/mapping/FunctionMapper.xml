<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.springmvc.dao.FunctionMapper">
  <resultMap id="BaseResultMap" type="cn.springmvc.model.Function">
    <id column="funcid" jdbcType="VARCHAR" property="funcid" />
    <result column="funcname" jdbcType="VARCHAR" property="funcname" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="parentid" jdbcType="VARCHAR" property="parentid" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="func_order" jdbcType="INTEGER" property="funcOrder" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    funcid, funcname, description, parentid, url, func_order
  </sql>
  <select id="selectByExample" parameterType="cn.springmvc.model.FunctionCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_function
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_function
    where funcid = #{funcid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_function
    where funcid = #{funcid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.springmvc.model.FunctionCriteria">
    delete from t_function
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.springmvc.model.Function">
    insert into t_function (funcid, funcname, description, 
      parentid, url, func_order
      )
    values (#{funcid,jdbcType=VARCHAR}, #{funcname,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{parentid,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{funcOrder,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.springmvc.model.Function">
    insert into t_function
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="funcid != null">
        funcid,
      </if>
      <if test="funcname != null">
        funcname,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="parentid != null">
        parentid,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="funcOrder != null">
        func_order,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="funcid != null">
        #{funcid,jdbcType=VARCHAR},
      </if>
      <if test="funcname != null">
        #{funcname,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="funcOrder != null">
        #{funcOrder,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.springmvc.model.FunctionCriteria" resultType="java.lang.Long">
    select count(*) from t_function
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_function
    <set>
      <if test="record.funcid != null">
        funcid = #{record.funcid,jdbcType=VARCHAR},
      </if>
      <if test="record.funcname != null">
        funcname = #{record.funcname,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.parentid != null">
        parentid = #{record.parentid,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.funcOrder != null">
        func_order = #{record.funcOrder,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_function
    set funcid = #{record.funcid,jdbcType=VARCHAR},
      funcname = #{record.funcname,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      parentid = #{record.parentid,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      func_order = #{record.funcOrder,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.springmvc.model.Function">
    update t_function
    <set>
      <if test="funcname != null">
        funcname = #{funcname,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        parentid = #{parentid,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="funcOrder != null">
        func_order = #{funcOrder,jdbcType=INTEGER},
      </if>
    </set>
    where funcid = #{funcid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.springmvc.model.Function">
    update t_function
    set funcname = #{funcname,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      parentid = #{parentid,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      func_order = #{funcOrder,jdbcType=INTEGER}
    where funcid = #{funcid,jdbcType=VARCHAR}
  </update>
</mapper>